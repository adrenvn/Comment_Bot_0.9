"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Instagram Automation Bot v2.0
–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""

import os
from cryptography.fernet import Fernet

# === –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")

ADMIN_TELEGRAM_ID = os.getenv("ADMIN_TELEGRAM_ID")
DATABASE_PATH = os.getenv("DATABASE_PATH", "sqlite:///./data/bot_database.db")

# === –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –®–ò–§–†–û–í–ê–ù–ò–Ø ===
def init_encryption():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è"""
    encryption_key = os.getenv("ENCRYPTION_KEY")
    
    # –ï—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
    if not encryption_key or encryption_key == "your_base64_encryption_key_here":
        print("üîë –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è...")
        encryption_key = Fernet.generate_key().decode()
        print(f"‚úÖ –ù–æ–≤—ã–π –∫–ª—é—á: {encryption_key}")
        print("üìù –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª: ENCRYPTION_KEY=" + encryption_key)
        return encryption_key, Fernet(encryption_key.encode())
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª—é—á–∞
    try:
        cipher = Fernet(encryption_key.encode())
        print("‚úÖ –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return encryption_key, cipher
    except Exception as e:
        print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: {e}")
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–ª—é—á...")
        encryption_key = Fernet.generate_key().decode()
        cipher = Fernet(encryption_key.encode())
        print(f"‚úÖ –ù–æ–≤—ã–π –∫–ª—é—á: {encryption_key}")
        print("üìù –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª: ENCRYPTION_KEY=" + encryption_key)
        return encryption_key, cipher

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
ENCRYPTION_KEY, cipher = init_encryption()

# === –ö–û–ù–°–¢–ê–ù–¢–´ INSTAGRAM ===
MAX_ATTEMPTS = int(os.getenv("MAX_ATTEMPTS", 5))
DELAY_BETWEEN_ATTEMPTS = int(os.getenv("DELAY_BETWEEN_ATTEMPTS", 420))  # 7 –º–∏–Ω—É—Ç
CAPTCHA_TIMEOUT = int(os.getenv("CAPTCHA_TIMEOUT", 1800))  # 30 –º–∏–Ω—É—Ç
MAX_REQUESTS_PER_HOUR = int(os.getenv("MAX_REQUESTS_PER_HOUR", 200))
MAX_ACTIVE_SCENARIOS = int(os.getenv("MAX_ACTIVE_SCENARIOS", 2))
MIN_ACTION_DELAY = int(os.getenv("MIN_ACTION_DELAY", 15))
MAX_ACTION_DELAY = int(os.getenv("MAX_ACTION_DELAY", 30))

# === –ö–û–ù–°–¢–ê–ù–¢–´ –ü–†–û–ö–°–ò ===
PROXY_CHECK_TIMEOUT = 10
PROXY_CHECK_URL = "http://httpbin.org/ip"
PROXY_RECHECK_INTERVAL = 30

# === –ö–û–ù–°–¢–ê–ù–¢–´ –£–õ–£–ß–®–ï–ù–ù–û–ô –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ===
FAST_RETRY_DELAY = int(os.getenv("FAST_RETRY_DELAY", 120))
MAX_FAST_ATTEMPTS = int(os.getenv("MAX_FAST_ATTEMPTS", 3))
SLOW_RETRY_DELAY = int(os.getenv("SLOW_RETRY_DELAY", 420))

# –¢–∞–π–º–∞—É—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–≤–µ—Ä–æ–∫
CHALLENGE_TIMEOUT = int(os.getenv("CHALLENGE_TIMEOUT", 1800))
SMS_CODE_TIMEOUT = int(os.getenv("SMS_CODE_TIMEOUT", 300))
EMAIL_TIMEOUT = int(os.getenv("EMAIL_TIMEOUT", 600))

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
ENABLE_SMS_INPUT = os.getenv("ENABLE_SMS_INPUT", "true").lower() == "true"
ENABLE_QUICK_RETRY = os.getenv("ENABLE_QUICK_RETRY", "true").lower() == "true"
ENABLE_AUTO_PROXY_SWITCH = os.getenv("ENABLE_AUTO_PROXY_SWITCH", "true").lower() == "true"
ENABLE_SAFE_MODE = os.getenv("ENABLE_SAFE_MODE", "true").lower() == "true"

# TikTok –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ENABLE_TIKTOK = os.getenv("ENABLE_TIKTOK", "true").lower() == "true"
TIKTOK_MAX_COMMENTS = int(os.getenv("TIKTOK_MAX_COMMENTS", 50))
TIKTOK_MESSAGE_DELAY = int(os.getenv("TIKTOK_MESSAGE_DELAY", 30))

# === –î–ï–¢–ï–ö–¢–û–† –¢–ò–ü–û–í –ü–†–û–í–ï–†–û–ö ===
CHALLENGE_DETECTION = {
    'phone_keywords': ['phone', 'sms', 'mobile', '—Ç–µ–∫—Å—Ç', '—Å–º—Å'],
    'email_keywords': ['email', 'mail', '–ø–æ—á—Ç–∞', '–ø–∏—Å—å–º–æ'],
    'device_keywords': ['device', '—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'],
    'photo_keywords': ['photo', 'selfie', '—Ñ–æ—Ç–æ', '—Å–µ–ª—Ñ–∏', '—Å–Ω–∏–º–æ–∫']
}

# === –ê–ù–¢–ò–î–ï–¢–ï–ö–¢ –£–õ–£–ß–®–ï–ù–ò–Ø ===
RANDOM_DELAYS = {
    'before_login': (3, 8),
    'after_challenge': (5, 15),
    'between_attempts': (2, 5),
}

# === –ù–ê–°–¢–†–û–ô–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===
AUTH_NOTIFICATIONS = {
    'send_progress': True,
    'send_challenges': True,
    'send_success': True,
    'send_failures': True,
}

# === –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì ===
AUTH_MONITORING = {
    'track_attempts': True,
    'track_challenge_types': True,
    'track_proxy_performance': True,
    'auto_alert_threshold': 0.7,
}

# === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
instabots = {}
tasks = {}
captcha_confirmed = {}
auth_sessions = {}
auth_callbacks = {}
sms_codes = {}

# TikTok –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
tiktok_sessions = {}
tiktok_tasks = {}

# === –ù–ê–°–¢–†–û–ô–ö–ò –ê–ù–¢–ò–î–ï–¢–ï–ö–¢ ===
INSTAGRAM_USER_AGENTS = [
    "Instagram 219.0.0.12.117 Android",
    "Instagram 250.0.0.16.109 Android",
    "Instagram 243.0.0.15.119 Android"
]

DEVICE_SETTINGS = [
    {
        'manufacturer': 'Samsung',
        'model': 'SM-G973F',
        'android_version': 29,
        'android_release': '10'
    },
    {
        'manufacturer': 'Xiaomi',
        'model': 'Mi 10',
        'android_version': 30,
        'android_release': '11'
    },
    {
        'manufacturer': 'OnePlus',
        'model': 'OnePlus 8',
        'android_version': 29,
        'android_release': '10'
    }
]

print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")